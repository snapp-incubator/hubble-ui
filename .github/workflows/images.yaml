name: Image CI Build

on:
  pull_request:
    types: [opened, synchronize, reopened]
  pull_request_target:
    types: [opened, synchronize, reopened]
  push:
    branches:
      - master
    tags:
      - "v*"

jobs:
  build-and-push-prs:
    if: ${{ github.repository == 'snapp-incubator/hubble-ui' }}
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        include:
          - name: hubble-ui
            context: .
            dockerfile: ./Dockerfile
          - name: hubble-ui-backend
            context: ./backend
            dockerfile: ./backend/Dockerfile

    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to ghcr.io for CI
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Determine image tag
        id: tag
        run: |
          if [[ "${GITHUB_REF_TYPE}" == "tag" ]]; then
            echo "tag=${GITHUB_REF_NAME}" >> $GITHUB_OUTPUT
          elif [[ "${{ github.event.pull_request.head.sha }}" != "" ]]; then
            echo "tag=${{ github.event.pull_request.head.sha }}" >> $GITHUB_OUTPUT
          else
            echo "tag=${{ github.sha }}" >> $GITHUB_OUTPUT
          fi

      - name: Checkout Source Code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.sha }}

      # Master branch & tag builds
      - name: CI Build ${{ matrix.name }}
        if: ${{ github.event_name != 'pull_request_target' }}
        uses: docker/build-push-action@v6
        id: docker_build_ci_master
        with:
          context: ${{ matrix.context }}
          file: ${{ matrix.dockerfile }}
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ghcr.io/${{ github.repository_owner }}/${{ matrix.name }}:${{ steps.tag.outputs.tag }}
            ghcr.io/${{ github.repository_owner }}/${{ matrix.name }}:latest

      - name: CI Image Releases digests (branch/tag)
        if: ${{ github.event_name != 'pull_request_target' }}
        shell: bash
        run: |
          mkdir -p image-digest/
          echo "ghcr.io/${{ github.repository_owner }}/${{ matrix.name }}:${{ steps.tag.outputs.tag }}@${{ steps.docker_build_ci_master.outputs.digest }}" > image-digest/${{ matrix.name }}.txt
          echo "ghcr.io/${{ github.repository_owner }}/${{ matrix.name }}:latest@${{ steps.docker_build_ci_master.outputs.digest }}" >> image-digest/${{ matrix.name }}.txt

      # PR builds
      - name: CI Build ${{ matrix.name }} (PR)
        if: ${{ github.event_name == 'pull_request_target' }}
        uses: docker/build-push-action@v6
        id: docker_build_ci_pr
        with:
          context: ${{ matrix.context }}
          file: ${{ matrix.dockerfile }}
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ghcr.io/${{ github.repository_owner }}/${{ matrix.name }}:${{ steps.tag.outputs.tag }}

      - name: CI Image Releases digests (PR)
        if: ${{ github.event_name == 'pull_request_target' }}
        shell: bash
        run: |
          mkdir -p image-digest/
          echo "ghcr.io/${{ github.repository_owner }}/${{ matrix.name }}:${{ steps.tag.outputs.tag }}@${{ steps.docker_build_ci_pr.outputs.digest }}" > image-digest/${{ matrix.name }}.txt

      # Upload artifact digests
      - name: Upload artifact digests
        uses: actions/upload-artifact@v4
        with:
          name: image-digest ${{ matrix.name }}
          path: image-digest
          retention-days: 1

  image-digests:
    if: ${{ github.repository == 'snapp-incubator/hubble-ui' }}
    name: Display Digests
    runs-on: ubuntu-22.04
    needs: build-and-push-prs
    steps:
      - name: Prepare digest folder
        run: mkdir -p image-digest/

      - name: Download digests of all images built
        uses: actions/download-artifact@v4
        with:
          path: image-digest/

      - name: Image Digests Output
        run: |
          cd image-digest/
          find -type f | sort | xargs -d '\n' cat
